sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
git clone https://github.com/opf/openproject-deploy --depth=1 --branch=stable/15 openproject
cp .env.example .env
sudo mkdir -p /var/openproject/assets
sudo chown 1000:1000 -R /var/openproject/assets
OPENPROJECT_HTTPS=false docker compose up -d --build --pull always
OPENPROJECT_HTTPS=false docker compose up -d --build --pull always


TAG=15-slim
OPENPROJECT_HTTPS=false
OPENPROJECT_HOST__NAME=localhost
PORT=127.0.0.1:8080
OPENPROJECT_RAILS__RELATIVE__URL__ROOT=
IMAP_ENABLED=false
DATABASE_URL=postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true
RAILS_MIN_THREADS=4
RAILS_MAX_THREADS=16
PGDATA="/var/lib/postgresql/data"
OPDATA="/var/openproject/assets"
TAG=15-slim
OPENPROJECT_HTTPS=false
OPENPROJECT_HOST__NAME=13.126.248.133:8080
DATABASE_URL=postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true
PGDATA=pgdata
OPDATA=opdata
POSTGRES_PASSWORD=p4ssw0rd
PORT=8080
root@ip-172-31-33-28:/home/ubuntu/openproject# ^C




version: '3.8'

networks:
  frontend:
  backend:

volumes:
  pgdata:
  opdata:

x-op-restart-policy: &restart_policy
  restart: unless-stopped

x-op-image: &image
  image: openproject/openproject:${TAG}

x-op-app: &app
  <<: [*image, *restart_policy]
  environment:
    OPENPROJECT_HTTPS: "${OPENPROJECT_HTTPS}"
    OPENPROJECT_HOST__NAME: "${OPENPROJECT_HOST__NAME}"
    OPENPROJECT_HSTS: "false"
    RAILS_CACHE_STORE: "memcache"
    OPENPROJECT_CACHE__MEMCACHE__SERVER: "cache:11211"
    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: "${OPENPROJECT_RAILS__RELATIVE__URL__ROOT}"
    DATABASE_URL: "${DATABASE_URL}"
    RAILS_MIN_THREADS: "${RAILS_MIN_THREADS}"
    RAILS_MAX_THREADS: "${RAILS_MAX_THREADS}"
    IMAP_ENABLED: "${IMAP_ENABLED}"
  volumes:
    - "${OPDATA}:/var/openproject/assets"

services:
  db:
    image: postgres:13
    <<: *restart_policy
    stop_grace_period: "3s"
    volumes:
      - "${PGDATA}:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "p4ssw0rd"
      POSTGRES_DB: openproject
    networks:
      - backend

  cache:
    image: memcached
    <<: *restart_policy
    networks:
      - backend

  proxy:
    build:
      context: ./proxy
      args:
        APP_HOST: web
    image: openproject/proxy
    <<: *restart_policy
    ports:
      - "${PORT}:80"
    depends_on:
      - web
    networks:
      - frontend

  web:
    <<: *app
    command: "./docker/prod/web"
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - cache
      - seeder
    labels:
      - autoheal=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080${OPENPROJECT_RAILS__RELATIVE__URL__ROOT}/health_checks/default"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  autoheal:
    image: willfarrell/autoheal:1.2.0
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      AUTOHEAL_CONTAINER_LABEL: autoheal
      AUTOHEAL_START_PERIOD: 600
      AUTOHEAL_INTERVAL: 30

  worker:
    <<: *app
    command: "./docker/prod/worker"
    networks:
      - backend
    depends_on:
      - db
      - cache
      - seeder

  cron:
    <<: *app
    command: "./docker/prod/cron"
    networks:
      - backend
    depends_on:
      - db
      - cache
      - seeder

  seeder:
    <<: *app
    command: "./docker/prod/seeder"
    restart: on-failure
    networks:
      - backend



1  sudo apt install -y docker-compose
    2  sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    3  docker-compose --version
    4  git clone https://github.com/opf/openproject-deploy --depth=1 --branch=stable/15 openproject
    5  ls
    6  cd openproject/
    7  cp .env.example .env
    8  sudo mkdir -p /var/openproject/assets
    9  OPENPROJECT_HTTPS=false docker compose up -d --build --pull always
   10  docker-compose up -d --build --pull always
   11  docker ps -a
   12  echo "TAG=15-slim" >> .env
   13  ls
   14  cat .env
   15  echo "TAG=15-slim" >> .env
   16  echo "OPENPROJECT_HTTPS=false" >> .env
   17  echo "OPENPROJECT_HOST__NAME=13.200.243.88:8080" >> .env
   18  echo "DATABASE_URL=postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true" >> .env
   19  echo "PGDATA=pgdata" >> .env
   20  echo "OPDATA=opdata" >> .env
   21  echo "POSTGRES_PASSWORD=p4ssw0rd" >> .env
   22  echo "PORT=8080" >> .env
   23  export $(grep -v '^#' .env | xargs)
   24  docker-compose up -d --build --pull always
   25  ls
   26  mv docker-compose.yml docker-compose1.yml
   27  nano docker-compose.yaml
   28  version: '3.8'
   29  networks:
   30  volumes:
   31  x-op-restart-policy: &restart_policy
   32  x-op-image: &image
   33  x-op-app: &app
   34  docker-compose down
   35  docker-compose pull
   36  docker-compose build
   37  docker-compose up -d
   38  docker ps -a
   39  rm -rf docker-compose.yaml
   40  mv docker-compose1.yml docker-compose.yml
   41  docker-compose down
   42  docker-compose up
   43  docker-compose up -d
   44  docker-compose up
   45  cat docker-compose.yml
   46  nano docker-compose.yml
   47  nano docker-compose.yml docker-compose down
   48  docker-compose down
   49  docker-compose pull
   50  docker-compose build
   51  docker-compose up -d
   52  docker-compose up
